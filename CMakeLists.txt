cmake_minimum_required(VERSION 3.8.2)
project(pdc_mini_aevol)

set(CMAKE_CXX_STANDARD 14)

if ( DO_TRACES )
    add_definitions(-DTRACES)
    message( STATUS "Traces are activated" )
endif ( DO_TRACES )

if ( USE_CUDA )
    find_package(CUDA REQUIRED)
    enable_language(CUDA)
    set(CUDA_NVCC_FLAGS "-std=c++11 -arch=compute_60 -lineinfo")
    cuda_compile(cuda_aevol Algorithms.cu ThreefryGPU.cu)
endif ( USE_CUDA )

if ( USE_OMP )
    find_package(OpenMP REQUIRED)
    if ( OPENMP_FOUND )
        add_definitions(-DUSE_OMP)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
        set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
    endif ()
endif ( USE_OMP )

if ( USE_MPI )
    find_package(MPI REQUIRED)
    include_directories(${MPI_INCLUDE_PATH})
endif ( USE_MPI )


add_library(micro_aevol ExpManager.cpp ExpManager.h AeTime.cpp AeTime.h DnaMutator.cpp DnaMutator.h MutationEvent.cpp MutationEvent.cpp Organism.cpp Organism.h Promoter.h RNA.h Protein.h Stats.cpp Stats.h Gaussian.h Threefry.cpp Dna.cpp Timetracer.h)

find_package(ZLIB REQUIRED)
if ( ZLIB_FOUND )
    target_include_directories(micro_aevol PUBLIC ${ZLIB_INCLUDE_DIRS})
    target_link_libraries(micro_aevol PUBLIC ${ZLIB_LIBRARIES})
endif ( ZLIB_FOUND )

if ( USE_MPI )
    add_executable(pdc_micro_aevol main.cpp)
    target_link_libraries(pdc_micro_aevol micro_aevol ${MPI_LIBRARIES})
else ( USE_MPI )
    add_executable(pdc_micro_aevol main.cpp)
    target_link_libraries(pdc_micro_aevol micro_aevol)
endif ( USE_MPI )
